{"data": [[[1, "{\"task_id\": \"heart_disease\"}", 0], [0.17621145374449337, 9.483205556869507, {"__enum__": "StatusType.SUCCESS"}, {"duration": 9.30514645576477, "num_run": 2, "train_loss": 0.0, "configuration_origin": "Initial design"}]], [[2, "{\"task_id\": \"heart_disease\"}", 0], [1.0, 30.090004682540894, {"__enum__": "StatusType.TIMEOUT"}, {"error": "Timeout", "configuration_origin": "Initial design"}]], [[3, "{\"task_id\": \"heart_disease\"}", 0], [1.0, 4.088758945465088, {"__enum__": "StatusType.CRASHED"}, {"traceback": "Traceback (most recent call last):\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/evaluation/__init__.py\", line 30, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/evaluation/train_evaluator.py\", line 846, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/evaluation/train_evaluator.py\", line 166, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/evaluation/train_evaluator.py\", line 340, in _partial_fit_and_predict\n    model = self._get_model()\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/evaluation/abstract_evaluator.py\", line 197, in _get_model\n    init_params=self._init_params)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/pipeline/classification.py\", line 83, in __init__\n    random_state, init_params)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/pipeline/base.py\", line 36, in __init__\n    self.config_space = self.get_hyperparameter_search_space()\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/pipeline/base.py\", line 216, in get_hyperparameter_search_space\n    dataset_properties=self.dataset_properties_)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/pipeline/classification.py\", line 181, in _get_hyperparameter_search_space\n    exclude=exclude, include=include, pipeline=self.steps)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/pipeline/base.py\", line 334, in _get_base_search_space\n    exclude=exclude)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/autosklearn/pipeline/create_searchspace_util.py\", line 256, in add_forbidden\n    conf_space.add_forbidden_clause(forbidden)\n  File \"/usr/local/anaconda/lib/python3.6/site-packages/pynisher/limit_function_call.py\", line 31, in handler\n    raise(TimeoutException)\npynisher.limit_function_call.TimeoutException\n", "error": "TimeoutException()", "configuration_origin": "Initial design"}]]], "configs": {"1": {"balancing:strategy": "none", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "random_forest", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:bootstrap": "True", "classifier:random_forest:criterion": "gini", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 0.5, "classifier:random_forest:max_leaf_nodes": "None", "classifier:random_forest:min_impurity_decrease": 0.0, "classifier:random_forest:min_samples_leaf": 1, "classifier:random_forest:min_samples_split": 2, "classifier:random_forest:min_weight_fraction_leaf": 0.0, "classifier:random_forest:n_estimators": 100, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.01}, "2": {"balancing:strategy": "none", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "gradient_boosting", "imputation:strategy": "mean", "preprocessor:__choice__": "polynomial", "rescaling:__choice__": "robust_scaler", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "False", "classifier:gradient_boosting:early_stop": "train", "classifier:gradient_boosting:l2_regularization": 1e-10, "classifier:gradient_boosting:learning_rate": 0.10000000000000002, "classifier:gradient_boosting:loss": "auto", "classifier:gradient_boosting:max_bins": 256, "classifier:gradient_boosting:max_depth": "None", "classifier:gradient_boosting:max_iter": 32, "classifier:gradient_boosting:max_leaf_nodes": 31, "classifier:gradient_boosting:min_samples_leaf": 20, "classifier:gradient_boosting:scoring": "loss", "classifier:gradient_boosting:tol": 1e-07, "preprocessor:polynomial:degree": 2, "preprocessor:polynomial:include_bias": "True", "preprocessor:polynomial:interaction_only": "True", "rescaling:robust_scaler:q_max": 0.75, "rescaling:robust_scaler:q_min": 0.25, "classifier:gradient_boosting:n_iter_no_change": 10}, "3": {"balancing:strategy": "none", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "gaussian_nb", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "robust_scaler", "rescaling:robust_scaler:q_max": 0.9706051256162626, "rescaling:robust_scaler:q_min": 0.28015174489784117}}}